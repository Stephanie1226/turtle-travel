{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/turtle-travel/src/components/ReadFile.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { load_input_data } from '../Redux/inputData/inputData-action';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    load_input_data: status => dispatch(load_input_data(status))\n  };\n};\n\nclass ReadFile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showFile = event => {\n      if (window.File && window.FileReader && window.FileList && window.Blob) {\n        var preview = document.getElementById('show-text');\n        var file = document.querySelector('input[type=file]').files[0];\n        var reader = new FileReader();\n        var textFile = /text.*/;\n        var temp_data;\n\n        if (file.type.match(textFile)) {\n          reader.onload = event => {\n            temp_data = event.target.result;\n            this.props.load_input_data(event.target.result);\n          };\n        } else {\n          preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\n        }\n\n        reader.readAsText(file);\n        this.setState({\n          input_data: \"ABC\"\n        });\n      } else {\n        alert(\"Your browser is too old to support HTML5 File API\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.showFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"show-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Choose text File\"));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(ReadFile);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/turtle-travel/src/components/ReadFile.jsx"],"names":["React","Component","connect","load_input_data","mapDispatchToProps","dispatch","status","ReadFile","showFile","event","window","File","FileReader","FileList","Blob","preview","document","getElementById","file","querySelector","files","reader","textFile","temp_data","type","match","onload","target","result","props","innerHTML","readAsText","setState","input_data","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,qCAAhC;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLF,IAAAA,eAAe,EAAGG,MAAD,IAAYD,QAAQ,CAACF,eAAe,CAACG,MAAD,CAAhB;AADhC,GAAP;AAGD,CAJD;;AAMA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE/BO,QAF+B,GAEnBC,KAAD,IAAW;AACpB,UAAIC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,UAAtB,IAAoCF,MAAM,CAACG,QAA3C,IAAuDH,MAAM,CAACI,IAAlE,EAAwE;AACtE,YAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd;AACA,YAAIC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiD,CAAjD,CAAX;AACA,YAAIC,MAAM,GAAG,IAAIT,UAAJ,EAAb;AACA,YAAIU,QAAQ,GAAG,QAAf;AACA,YAAIC,SAAJ;;AAEA,YAAIL,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBH,QAAhB,CAAJ,EAA+B;AAC7BD,UAAAA,MAAM,CAACK,MAAP,GAAgBjB,KAAK,IAAI;AACvBc,YAAAA,SAAS,GAAGd,KAAK,CAACkB,MAAN,CAAaC,MAAzB;AACA,iBAAKC,KAAL,CAAW1B,eAAX,CAA2BM,KAAK,CAACkB,MAAN,CAAaC,MAAxC;AACD,WAHD;AAID,SALD,MAKO;AACLb,UAAAA,OAAO,CAACe,SAAR,GAAoB,+DAApB;AACD;;AACDT,QAAAA,MAAM,CAACU,UAAP,CAAkBb,IAAlB;AACA,aAAKc,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD,OAjBD,MAiBO;AACLC,QAAAA,KAAK,CAAC,mDAAD,CAAL;AACD;AACF,KAvB8B;AAAA;;AAyB/BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK3B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;AAMD;;AAhC8B;;AAoCjC,eAAeN,OAAO,CAAC,IAAD,EAAOE,kBAAP,CAAP,CAAkCG,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { load_input_data } from '../Redux/inputData/inputData-action';\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    load_input_data: (status) => dispatch(load_input_data(status))\n  }\n}\n\nclass ReadFile extends Component {\n\n  showFile = (event) => {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      var preview = document.getElementById('show-text');\n      var file = document.querySelector('input[type=file]').files[0];\n      var reader = new FileReader();\n      var textFile = /text.*/;\n      var temp_data;\n\n      if (file.type.match(textFile)) {\n        reader.onload = event => {\n          temp_data = event.target.result;\n          this.props.load_input_data(event.target.result);\n        }\n      } else {\n        preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\n      }\n      reader.readAsText(file);\n      this.setState({input_data: \"ABC\"});\n    } else {\n      alert(\"Your browser is too old to support HTML5 File API\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"file\" onChange={this.showFile} />\n        <div id=\"show-text\">Choose text File</div>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(ReadFile);\n"]},"metadata":{},"sourceType":"module"}