{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip, VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\nimport TurtleEndPosition from './TurtleEndPosition';\nconst strokeDasharray = \"10, 5\";\n\nconst mapStateToProps = state => {\n  return {\n    inputInfo: state.inputData.input_data\n  };\n};\n\nfunction PlotRoute(props) {\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    console.log(props.inputInfo);\n    fetch(\"/calculateroute\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props.inputInfo)\n    }).then(response => response.json()).then(data => {\n      setCoordinates(data);\n    });\n  }, [props.inputInfo]);\n  return /*#__PURE__*/React.createElement(VictoryChart, {\n    height: 200,\n    width: 200,\n    padding: 30,\n    containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 77\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VictoryAxis, {\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetY: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetX: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryGroup, {\n    color: \"#54B520\",\n    labels: ({\n      datum\n    }) => `x: ${datum.x} y: ${datum.y}`,\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      style: {\n        fontSize: 3\n      },\n      flyoutStyle: {\n        stroke: \"tomato\",\n        strokeWidth: 1\n      },\n      flyoutHeight: 10,\n      flyoutWidth: 15,\n      pointerLength: 5,\n      pointerWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }),\n    data: coordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    animate: {\n      duration: 500,\n      onLoad: {\n        duration: 500\n      }\n    },\n    style: {\n      data: {\n        strokeWidth: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryScatter, {\n    style: {\n      data: {\n        fill: ({\n          datum\n        }) => datum.x === coordinates[Object.keys(coordinates).length - 1].x && datum.y === coordinates[Object.keys(coordinates).length - 1].y ? \"#000000\" : \"#c43a31\",\n        stroke: ({\n          datum\n        }) => datum.x === coordinates[Object.keys(coordinates).length - 1].x && datum.y === coordinates[Object.keys(coordinates).length - 1].y ? \"#000000\" : \"#c43a31\",\n        fillOpacity: 0.7,\n        strokeWidth: 3\n      }\n    },\n    size: ({\n      active\n    }) => active ? 2 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default connect(mapStateToProps, null)(PlotRoute); //<VictoryScatter size={({ active }) => active ? 2 : 1 } />","map":{"version":3,"sources":["/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx"],"names":["React","useEffect","useState","connect","VictoryChart","VictoryVoronoiContainer","VictoryGroup","VictoryTooltip","VictoryLine","VictoryScatter","VictoryAxis","VictoryTheme","TurtleEndPosition","strokeDasharray","mapStateToProps","state","inputInfo","inputData","input_data","PlotRoute","props","coordinates","setCoordinates","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","material","grid","stroke","ticks","size","tickLabels","fontSize","padding","datum","x","y","strokeWidth","duration","onLoad","fill","Object","keys","length","fillOpacity","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip, VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\n\nimport TurtleEndPosition from './TurtleEndPosition';\n\nconst strokeDasharray = \"10, 5\";\nconst mapStateToProps = (state) => {\n  return {\n    inputInfo: state.inputData.input_data\n  }\n};\n\nfunction PlotRoute (props) {\n  const [coordinates, setCoordinates] = useState([]);\n\n  useEffect(() => {\n    console.log(props.inputInfo);\n\n    fetch(\"/calculateroute\", {\n      method:\"POST\",\n      headers:{'Content-Type': 'application/json'},\n      body:JSON.stringify(props.inputInfo)\n    })\n    .then(response => response.json())\n    .then(data => {setCoordinates(data);});\n  }, [props.inputInfo]);\n\n  return (\n    <VictoryChart height={200} width={200} padding={30} containerComponent={<VictoryVoronoiContainer/>}>\n      <VictoryAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetY={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryAxis dependentAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetX={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryGroup\n        color=\"#54B520\"\n        labels={({ datum }) => `x: ${datum.x} y: ${datum.y}`}\n        labelComponent={\n          <VictoryTooltip style={{ fontSize: 3 }} \n            flyoutStyle={{ stroke: \"tomato\", strokeWidth: 1 }} \n            flyoutHeight={10} \n            flyoutWidth={15} \n            pointerLength={5} \n            pointerWidth={3}\n          />\n        }\n        data={coordinates}\n      >\n        <VictoryLine animate={{duration: 500, onLoad: { duration: 500 }}} style={{data: { strokeWidth: 1 }}} />\n        <VictoryScatter style={{\n                          data: {\n                            fill: ({ datum }) => datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y ? \"#000000\" : \"#c43a31\",\n                            stroke: ({ datum }) => datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y ? \"#000000\" : \"#c43a31\",\n                            fillOpacity: 0.7,\n                            strokeWidth: 3\n                          }\n                        }}\n                        size={({ active }) => active ? 2 : 1 }\n          />\n      </VictoryGroup>\n    </VictoryChart>\n  );\n}\n\n\nexport default connect(mapStateToProps, null)(PlotRoute);\n\n\n//<VictoryScatter size={({ active }) => active ? 2 : 1 } />\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}