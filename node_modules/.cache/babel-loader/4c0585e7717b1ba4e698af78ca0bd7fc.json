{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip, VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\nconst data = [{\n  x: 0,\n  y: 0\n}, {\n  x: 1,\n  y: 0\n}, {\n  x: 2,\n  y: 0\n}, {\n  x: 2,\n  y: 1\n}, {\n  x: 2,\n  y: 2\n}, {\n  x: 2,\n  y: 3\n}, {\n  x: 1,\n  y: 3\n}, {\n  x: 1,\n  y: 2\n}, {\n  x: 2,\n  y: 2\n}, {\n  x: 3,\n  y: 2\n}, {\n  x: 2,\n  y: 2\n}];\n\nconst mapStateToProps = state => {\n  return {\n    inputInfo: state.inputData.input_data\n  };\n};\n\nconst strokeDasharray = \"10, 5\";\n\nfunction PlotRoute(props) {\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    cosole.log(props.inputInfo === Ture);\n\n    if (props.inputInfo) {\n      fetch(\"/calculateroute\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(props.inputInfo)\n      }).then(response => response.json()).then(data => {\n        setCoordinates(data);\n        console.log(coordinates);\n      });\n    } else {\n      setCoordinates([{\n        'x': 1,\n        'y': 0\n      }]);\n    }\n\n    ;\n  }, [props.inputInfo]);\n  return /*#__PURE__*/React.createElement(VictoryChart, {\n    height: 200,\n    width: 200,\n    padding: {\n      top: 30,\n      bottom: 30,\n      right: 30,\n      left: 30\n    },\n    containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VictoryAxis, {\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetY: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetX: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryGroup, {\n    color: \"#54B520\",\n    labels: ({\n      datum\n    }) => `x: ${datum.x} y: ${datum.y}`,\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      style: {\n        fontSize: 3\n      },\n      flyoutStyle: {\n        stroke: \"tomato\",\n        strokeWidth: 1\n      },\n      flyoutHeight: 10,\n      flyoutWidth: 15,\n      pointerLength: 5,\n      pointerWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }),\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    animate: {\n      duration: 500,\n      onLoad: {\n        duration: 500\n      }\n    },\n    style: {\n      data: {\n        strokeWidth: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryScatter, {\n    size: ({\n      active\n    }) => active ? 2 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default connect(mapStateToProps)(PlotRoute);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx"],"names":["React","useEffect","useState","connect","VictoryChart","VictoryVoronoiContainer","VictoryGroup","VictoryTooltip","VictoryLine","VictoryScatter","VictoryAxis","VictoryTheme","data","x","y","mapStateToProps","state","inputInfo","inputData","input_data","strokeDasharray","PlotRoute","props","coordinates","setCoordinates","cosole","log","Ture","fetch","method","headers","body","JSON","stringify","then","response","json","console","top","bottom","right","left","material","grid","stroke","ticks","size","tickLabels","fontSize","padding","datum","strokeWidth","duration","onLoad","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip, VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\n\nconst data = [\n  { x: 0, y: 0 },\n  { x: 1, y: 0 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 1, y: 3 },\n  { x: 1, y: 2 },\n  { x: 2, y: 2 },\n  { x: 3, y: 2 },\n  { x: 2, y: 2 }\n];\n\nconst mapStateToProps = (state) => {\n  return {\n    inputInfo: state.inputData.input_data\n  }\n}\n\nconst strokeDasharray = \"10, 5\";\n\nfunction PlotRoute (props) {\n  const [coordinates, setCoordinates] = useState([]);\n\n  useEffect(() => {\n    cosole.log(props.inputInfo===Ture)\n    if (props.inputInfo) {\n      fetch(\"/calculateroute\", {\n        method:\"POST\",\n        headers:{'Content-Type': 'application/json'},\n        body:JSON.stringify(props.inputInfo)\n      })\n      .then(response => response.json())\n      .then(data => {\n        setCoordinates(data);\n        console.log(coordinates);\n      });\n    } else {\n      setCoordinates([{'x': 1, 'y': 0}]);\n    };\n  }, [props.inputInfo]);\n\n  return (\n    <VictoryChart \n      height={200} \n      width={200} \n      padding={{ top: 30, bottom: 30, right: 30, left: 30 }}\n      containerComponent={<VictoryVoronoiContainer/>}\n    >\n      <VictoryAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetY={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryAxis dependentAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetX={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryGroup\n        color=\"#54B520\"\n        labels={({ datum }) => `x: ${datum.x} y: ${datum.y}`}\n        labelComponent={\n          <VictoryTooltip style={{ fontSize: 3 }} flyoutStyle={{ stroke: \"tomato\", strokeWidth: 1 }} flyoutHeight={10} flyoutWidth={15} pointerLength={5} pointerWidth={3}/>\n        }\n        data={data}\n      >\n        <VictoryLine animate={{duration: 500, onLoad: { duration: 500 }}} style={{data: { strokeWidth: 1 }}} />\n        <VictoryScatter size={({ active }) => active ? 2 : 1 } />\n      </VictoryGroup>\n    </VictoryChart>\n  );\n}\n\n\nexport default connect(mapStateToProps)(PlotRoute);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}