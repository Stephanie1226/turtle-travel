{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip } from 'victory';\nimport { VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\nimport { connect } from 'react-redux';\nimport { load_coordinates } from '../Redux/coordinatesData/coordinatesData-action';\nconst strokeDasharray = \"10, 5\";\n\nconst mapStateToProps = state => {\n  return {\n    inputInfo: state.inputData.input_data,\n    coordinatesInfo: state.inputData.coordinates_data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    load_coordinates: data => dispatch(load_coordinates(data))\n  };\n};\n\nfunction PlotRoute(props) {\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    fetch(\"/calculateroute\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props.inputInfo)\n    }).then(response => response.json()).then(data => {\n      setCoordinates(data);\n      props.load_coordinate(data);\n    });\n  }, [props.inputInfo]); // props.load_coordinates(coordinates);\n\n  return /*#__PURE__*/React.createElement(VictoryChart, {\n    height: 200,\n    width: 200,\n    padding: 30,\n    containerComponent: /*#__PURE__*/React.createElement(VictoryVoronoiContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 77\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, console.log(coordinates), /*#__PURE__*/React.createElement(VictoryAxis, {\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetY: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    crossAxis: true,\n    width: 200,\n    height: 200,\n    domain: [-10, 10],\n    theme: VictoryTheme.material,\n    offsetX: 100,\n    standalone: false,\n    style: {\n      grid: {\n        stroke: \"#ECEFF1\",\n        strokeDasharray\n      },\n      ticks: {\n        stroke: \"grey\",\n        size: 1\n      },\n      tickLabels: {\n        fontSize: 3,\n        padding: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryGroup, {\n    color: \"#54B520\",\n    labels: ({\n      datum\n    }) => `x: ${datum.x} y: ${datum.y}`,\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      style: {\n        fontSize: 3\n      },\n      flyoutStyle: {\n        stroke: \"#b590ca\",\n        strokeWidth: 1\n      },\n      flyoutHeight: 10,\n      flyoutWidth: 15,\n      pointerLength: 5,\n      pointerWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }),\n    data: coordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    animate: {\n      duration: 500,\n      onLoad: {\n        duration: 500\n      }\n    },\n    style: {\n      data: {\n        stroke: \"#ffb6b6\",\n        strokeWidth: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryScatter, {\n    style: {\n      data: {\n        fill: ({\n          datum\n        }) => datum.x === coordinates[Object.keys(coordinates).length - 1].x && datum.y === coordinates[Object.keys(coordinates).length - 1].y || datum.x === coordinates[0].x && datum.y === coordinates[0].y ? \"#679b9b\" : \"#aacfcf\",\n        stroke: ({\n          datum\n        }) => datum.x === coordinates[Object.keys(coordinates).length - 1].x && datum.y === coordinates[Object.keys(coordinates).length - 1].y || datum.x === coordinates[0].x && datum.y === coordinates[0].y ? \"#679b9b\" : \"#aacfcf\",\n        fillOpacity: 0.75,\n        strokeWidth: 0.5\n      }\n    },\n    size: ({\n      active\n    }) => active ? 2 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotRoute); //<VictoryScatter size={({ active }) => active ? 2 : 1 } />","map":{"version":3,"sources":["/Users/Stephanie/Desktop/turtle-travel/src/components/PlotRoute.jsx"],"names":["React","useEffect","useState","VictoryChart","VictoryVoronoiContainer","VictoryGroup","VictoryTooltip","VictoryLine","VictoryScatter","VictoryAxis","VictoryTheme","connect","load_coordinates","strokeDasharray","mapStateToProps","state","inputInfo","inputData","input_data","coordinatesInfo","coordinates_data","mapDispatchToProps","dispatch","data","PlotRoute","props","coordinates","setCoordinates","fetch","method","headers","body","JSON","stringify","then","response","json","load_coordinate","console","log","material","grid","stroke","ticks","size","tickLabels","fontSize","padding","datum","x","y","strokeWidth","duration","onLoad","fill","Object","keys","length","fillOpacity","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip} from 'victory';\nimport { VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\n\nimport { connect } from 'react-redux';\nimport { load_coordinates } from '../Redux/coordinatesData/coordinatesData-action';\n\n\nconst strokeDasharray = \"10, 5\";\nconst mapStateToProps = (state) => {\n  return {\n    inputInfo: state.inputData.input_data,\n    coordinatesInfo: state.inputData.coordinates_data\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load_coordinates: (data) => dispatch(load_coordinates(data))\n  }\n}\n\nfunction PlotRoute (props) {\n  const [coordinates, setCoordinates] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/calculateroute\", {\n      method:\"POST\",\n      headers:{'Content-Type': 'application/json'},\n      body:JSON.stringify(props.inputInfo)\n    })\n    .then(response => response.json())\n    .then(data => {\n      setCoordinates(data);\n      props.load_coordinate(data)});\n  }, [props.inputInfo]);\n\n  // props.load_coordinates(coordinates);\n\n  return (\n    <VictoryChart height={200} width={200} padding={30} containerComponent={<VictoryVoronoiContainer/>}>\n      {console.log(coordinates)}\n      <VictoryAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetY={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryAxis dependentAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetX={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryGroup\n        color=\"#54B520\"\n        labels={({ datum }) => `x: ${datum.x} y: ${datum.y}`}\n        labelComponent={\n          <VictoryTooltip style={{ fontSize: 3 }} \n            flyoutStyle={{ stroke: \"#b590ca\", strokeWidth: 1 }} \n            flyoutHeight={10} \n            flyoutWidth={15} \n            pointerLength={5} \n            pointerWidth={3}\n          />\n        }\n        data={coordinates}\n      >\n        <VictoryLine animate={{duration: 500, onLoad: { duration: 500 }}} style={{data: { stroke: \"#ffb6b6\", strokeWidth: 1 }}} />\n        <VictoryScatter style={{\n                          data: {\n                            fill: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y) \n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y) \n                              ? \"#679b9b\" : \"#aacfcf\",\n                            stroke: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y)\n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y)  \n                              ? \"#679b9b\" : \"#aacfcf\",\n                            fillOpacity: 0.75,\n                            strokeWidth: 0.5\n                          }\n                        }}\n                        size={({ active }) => active ? 2 : 1 }\n          />\n      </VictoryGroup>\n    </VictoryChart>\n  );\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotRoute);\n\n\n//<VictoryScatter size={({ active }) => active ? 2 : 1 } />\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}