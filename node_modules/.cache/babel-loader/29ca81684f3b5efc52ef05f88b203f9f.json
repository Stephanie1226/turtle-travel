{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/turtle-travel/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport { VictoryBar } from 'victory';\nimport './App.css';\nconst data = [{\n  quarter: 1,\n  earnings: 13000\n}, {\n  quarter: 2,\n  earnings: 16500\n}, {\n  quarter: 3,\n  earnings: 14250\n}, {\n  quarter: 4,\n  earnings: 19000\n}];\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(VictoryChart // domainPadding will add space to each side of VictoryBar to\n    // prevent it from overlapping the axis\n    , {\n      domainPadding: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n    // they are placed on the axis\n    , {\n      tickValues: [1, 2, 3, 4],\n      tickFormat: [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true // tickFormat specifies how ticks should be displayed\n      ,\n      tickFormat: x => `$${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: data,\n      x: \"quarter\",\n      y: \"earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Stephanie/Desktop/turtle-travel/src/App.js"],"names":["React","VictoryBar","data","quarter","earnings","App","Component","render","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,QAAQ,EAAE;AAAvB,CADW,EAEX;AAACD,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,QAAQ,EAAE;AAAvB,CAFW,EAGX;AAACD,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,QAAQ,EAAE;AAAvB,CAHW,EAIX;AAACD,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,QAAQ,EAAE;AAAvB,CAJW,CAAb;;AAOA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD,CACE;AACA;AAFF;AAGE,MAAA,aAAa,EAAE,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,WAAD,CACE;AACA;AAFF;AAGE,MAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHd;AAIE,MAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwC,WAAxC,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAWE,oBAAC,WAAD;AACE,MAAA,aAAa,MADf,CAEE;AAFF;AAGE,MAAA,UAAU,EAAGC,CAAD,IAAS,IAAGA,CAAC,GAAG,IAAK,GAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAgBE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,CAAC,EAAC,SAFJ;AAGE,MAAA,CAAC,EAAC,UAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAwBD;;AA1B+B;;AA6BlC,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport { VictoryBar } from 'victory';\nimport './App.css';\n\nconst data = [\n  {quarter: 1, earnings: 13000},\n  {quarter: 2, earnings: 16500},\n  {quarter: 3, earnings: 14250},\n  {quarter: 4, earnings: 19000}\n];\n\nclass App extends React.Component {\n  render() {\n    return (\n      <VictoryChart\n        // domainPadding will add space to each side of VictoryBar to\n        // prevent it from overlapping the axis\n        domainPadding={20}\n      >\n        <VictoryAxis\n          // tickValues specifies both the number of ticks and where\n          // they are placed on the axis\n          tickValues={[1, 2, 3, 4]}\n          tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n        />\n        <VictoryAxis\n          dependentAxis\n          // tickFormat specifies how ticks should be displayed\n          tickFormat={(x) => (`$${x / 1000}k`)}\n        />\n        <VictoryBar\n          data={data}\n          x=\"quarter\"\n          y=\"earnings\"\n        />\n      </VictoryChart>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}