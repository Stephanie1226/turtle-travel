{"ast":null,"code":"import _slicedToArray from\"/Users/Stephanie/Desktop/github/turtle-travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{VictoryChart,VictoryVoronoiContainer,VictoryGroup,VictoryTooltip}from'victory';import{VictoryLine,VictoryScatter,VictoryAxis,VictoryTheme}from'victory';import{connect}from'react-redux';import{load_coordinates as _load_coordinates}from'../Redux/coordinatesData/coordinatesData-action';var strokeDasharray=\"10, 5\";var mapStateToProps=function mapStateToProps(state){return{inputInfo:state.inputData.input_data};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{load_coordinates:function load_coordinates(data){return dispatch(_load_coordinates(data));}};};function PlotRoute(_ref){var inputInfo=_ref.inputInfo,load_coordinates=_ref.load_coordinates;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),coordinates=_useState2[0],setCoordinates=_useState2[1];//Send the data to backend and get the coordinates\nuseEffect(function(){fetch(\"/calculateroute\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(inputInfo)}).then(function(response){return response.json();}).then(function(data){setCoordinates(data);});},[inputInfo,setCoordinates]);// Check all the duplicate points\nvar duplicates=[];var result={};coordinates.forEach(function(item){result[JSON.stringify(item)]=result[JSON.stringify(item)]?result[JSON.stringify(item)]+1:1;});for(var _i=0,_Object$entries=Object.entries(result);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value>1){duplicates.push(JSON.parse(key));};};load_coordinates(duplicates);return/*#__PURE__*/React.createElement(VictoryChart,{height:200,width:200,padding:30,containerComponent:/*#__PURE__*/React.createElement(VictoryVoronoiContainer,null)},/*#__PURE__*/React.createElement(VictoryAxis,{crossAxis:true,width:200,height:200,domain:[-10,10],theme:VictoryTheme.material,offsetY:100,standalone:false,style:{grid:{stroke:\"#ECEFF1\",strokeDasharray:strokeDasharray},ticks:{stroke:\"grey\",size:1},tickLabels:{fontSize:3,padding:1}}}),/*#__PURE__*/React.createElement(VictoryAxis,{dependentAxis:true,crossAxis:true,width:200,height:200,domain:[-10,10],theme:VictoryTheme.material,offsetX:100,standalone:false,style:{grid:{stroke:\"#ECEFF1\",strokeDasharray:strokeDasharray},ticks:{stroke:\"grey\",size:1},tickLabels:{fontSize:3,padding:1}}}),/*#__PURE__*/React.createElement(VictoryGroup,{color:\"#54B520\",labels:function labels(_ref2){var datum=_ref2.datum;return\"x: \".concat(datum.x,\" y: \").concat(datum.y);},labelComponent:/*#__PURE__*/React.createElement(VictoryTooltip,{style:{fontSize:3},flyoutStyle:{stroke:\"#f8b195\",strokeWidth:1},flyoutHeight:10,flyoutWidth:15,pointerLength:5,pointerWidth:3}),data:coordinates},/*#__PURE__*/React.createElement(VictoryLine,{animate:{duration:500,onLoad:{duration:500}},style:{data:{stroke:\"#ffb6b6\",strokeWidth:1}}}),/*#__PURE__*/React.createElement(VictoryScatter,{style:{data:{fill:function fill(_ref3){var datum=_ref3.datum;return datum.x===coordinates[Object.keys(coordinates).length-1].x&&datum.y===coordinates[Object.keys(coordinates).length-1].y||datum.x===coordinates[0].x&&datum.y===coordinates[0].y?\"#004445\":\"#aacfcf\";},stroke:function stroke(_ref4){var datum=_ref4.datum;return datum.x===coordinates[Object.keys(coordinates).length-1].x&&datum.y===coordinates[Object.keys(coordinates).length-1].y||datum.x===coordinates[0].x&&datum.y===coordinates[0].y?\"#004445\":\"#aacfcf\";},fillOpacity:0.75,strokeWidth:0.5}},size:function size(_ref5){var active=_ref5.active;return active?2:1;}})));}export default connect(mapStateToProps,mapDispatchToProps)(PlotRoute);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/github/turtle-travel/src/components/PlotRoute.jsx"],"names":["React","useEffect","useState","VictoryChart","VictoryVoronoiContainer","VictoryGroup","VictoryTooltip","VictoryLine","VictoryScatter","VictoryAxis","VictoryTheme","connect","load_coordinates","strokeDasharray","mapStateToProps","state","inputInfo","inputData","input_data","mapDispatchToProps","dispatch","data","PlotRoute","coordinates","setCoordinates","fetch","method","headers","body","JSON","stringify","then","response","json","duplicates","result","forEach","item","Object","entries","key","value","push","parse","material","grid","stroke","ticks","size","tickLabels","fontSize","padding","datum","x","y","strokeWidth","duration","onLoad","fill","keys","length","fillOpacity","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip} from 'victory';\nimport { VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\n\nimport { connect } from 'react-redux';\nimport { load_coordinates } from '../Redux/coordinatesData/coordinatesData-action';\n\n\nconst strokeDasharray = \"10, 5\";\nconst mapStateToProps = (state) => {\n  return {\n    inputInfo: state.inputData.input_data\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load_coordinates: (data) => dispatch(load_coordinates(data))\n  }\n}\n\nfunction PlotRoute ({inputInfo, load_coordinates}) {\n  const [coordinates, setCoordinates] = useState([]);\n\n  //Send the data to backend and get the coordinates\n  useEffect(() => {\n    fetch(\"/calculateroute\", {\n      method:\"POST\",\n      headers:{'Content-Type': 'application/json'},\n      body:JSON.stringify(inputInfo)\n    })\n    .then(response => response.json())\n    .then(data => {setCoordinates(data)});\n  }, [inputInfo, setCoordinates]);\n\n  // Check all the duplicate points\n  let duplicates = [];\n  let result = {};\n  coordinates.forEach(function(item) {\n    result[JSON.stringify(item)] = result[JSON.stringify(item)] ? result[JSON.stringify(item)] + 1 : 1;\n  });\n  for (let [key, value] of Object.entries(result)) {\n    if (value > 1) {\n      duplicates.push(JSON.parse(key));\n    };\n  };\n  load_coordinates(duplicates);\n\n  return (\n    <VictoryChart height={200} width={200} padding={30} containerComponent={<VictoryVoronoiContainer/>}>\n      <VictoryAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetY={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryAxis dependentAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetX={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryGroup\n        color=\"#54B520\"\n        labels={({ datum }) => `x: ${datum.x} y: ${datum.y}`}\n        labelComponent={\n          <VictoryTooltip style={{ fontSize: 3 }} \n            flyoutStyle={{ stroke: \"#f8b195\", strokeWidth: 1 }} \n            flyoutHeight={10} \n            flyoutWidth={15} \n            pointerLength={5} \n            pointerWidth={3}\n          />\n        }\n        data={coordinates}\n      >\n        <VictoryLine animate={{duration: 500, onLoad: { duration: 500 }}} style={{data: { stroke: \"#ffb6b6\", strokeWidth: 1 }}} />\n        <VictoryScatter style={{\n                          data: {\n                            fill: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y) \n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y) \n                              ? \"#004445\" : \"#aacfcf\",\n                            stroke: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y)\n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y)  \n                              ? \"#004445\" : \"#aacfcf\",\n                            fillOpacity: 0.75,\n                            strokeWidth: 0.5\n                          }\n                        }}\n                        size={({ active }) => active ? 2 : 1 }\n          />\n      </VictoryGroup>\n    </VictoryChart>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotRoute);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}