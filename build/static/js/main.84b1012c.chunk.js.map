{"version":3,"sources":["components/header/Header.jsx","components/PlotRoute.jsx","Redux/coordinatesData/coordinatesData-action.js","Redux/coordinatesData/coordinatesData-constant.js","Redux/inputData/inputData-action.js","Redux/inputData/inputData-constant.js","components/readFile/ReadFile.jsx","components/reset/Reset.jsx","components/singlePoint/SinglePoint.js","components/duplicatePoints/DuplicatePoints.js","App.js","serviceWorker.js","Redux/inputData/inputData-reducer.js","Redux/coordinatesData/coordinatesData-reducer.js","Redux/root-reducer.js","index.js"],"names":["Header","className","symbol","label","connect","state","inputInfo","inputData","input_data","dispatch","load_coordinates","data","type","payload","coordinates_data","useState","coordinates","setCoordinates","useEffect","fetch","method","headers","body","JSON","stringify","then","response","json","duplicates","result","forEach","item","Object","entries","key","push","parse","height","width","padding","containerComponent","crossAxis","domain","theme","VictoryTheme","material","offsetY","standalone","style","grid","stroke","strokeDasharray","ticks","size","tickLabels","fontSize","dependentAxis","offsetX","color","labels","datum","x","y","labelComponent","flyoutStyle","strokeWidth","flyoutHeight","flyoutWidth","pointerLength","pointerWidth","animate","duration","onLoad","fill","keys","length","fillOpacity","active","load_input_data","inputd","ReadFile","showFile","event","window","File","FileReader","FileList","Blob","preview","document","getElementById","file","querySelector","files","reader","match","onload","props","target","innerHTML","readAsText","setState","alert","id","onChange","this","tabindex","for","Component","Reset","handleClick","bind","onClick","SinglePoint","coordinatesInfo","coordinatesData","coor","setCoors","map","points","i","App","React","Boolean","location","hostname","initialState","inputdata_reducer","action","assign","coordinatesdata_reducer","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84b1012c.chunk.js","sourcesContent":["import React from 'react';\nimport Emoji from 'a11y-react-emoji'\nimport './HeaderStyles.css';\n\nconst Header = () => (\n\t<div className=\"header-style\">\n\t\t<h1>\n\t\t\t<Emoji symbol=\"🐢 \" label=\"turtle\" />\n\t\t  Turtle Traveling Map\n\t\t  <Emoji symbol=\" 🐢\" label=\"turtle\" />\n\t\t </h1>\n\t</div>\n)\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { VictoryChart, VictoryVoronoiContainer, VictoryGroup, VictoryTooltip} from 'victory';\nimport { VictoryLine, VictoryScatter, VictoryAxis, VictoryTheme } from 'victory';\n\nimport { connect } from 'react-redux';\nimport { load_coordinates } from '../Redux/coordinatesData/coordinatesData-action';\n\n\nconst strokeDasharray = \"10, 5\";\nconst mapStateToProps = (state) => {\n  return {\n    inputInfo: state.inputData.input_data\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load_coordinates: (data) => dispatch(load_coordinates(data))\n  }\n}\n\nfunction PlotRoute ({inputInfo, load_coordinates}) {\n  const [coordinates, setCoordinates] = useState([]);\n\n  //Send the data to backend and get the coordinates\n  useEffect(() => {\n    fetch(\"/calculateroute\", {\n      method:\"POST\",\n      headers:{'Content-Type': 'application/json'},\n      body:JSON.stringify(inputInfo)\n    })\n    .then(response => response.json())\n    .then(data => {setCoordinates(data)});\n  }, [inputInfo, setCoordinates]);\n\n  // Check all the duplicate points\n  let duplicates = [];\n  let result = {};\n  coordinates.forEach(function(item) {\n    result[JSON.stringify(item)] = result[JSON.stringify(item)] ? result[JSON.stringify(item)] + 1 : 1;\n  });\n  for (let [key, value] of Object.entries(result)) {\n    if (value > 1) {\n      duplicates.push(JSON.parse(key));\n    };\n  };\n  load_coordinates(duplicates);\n\n  return (\n    <VictoryChart height={200} width={200} padding={30} containerComponent={<VictoryVoronoiContainer/>}>\n      <VictoryAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetY={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryAxis dependentAxis crossAxis\n        width={200}\n        height={200}\n        domain={[-10, 10]}\n        theme={VictoryTheme.material}\n        offsetX={100}\n        standalone={false}\n        style={{\n          grid: {stroke: \"#ECEFF1\", strokeDasharray},\n          ticks: {stroke: \"grey\", size: 1},\n          tickLabels: {fontSize: 3, padding: 1}\n        }}\n      />\n      <VictoryGroup\n        color=\"#54B520\"\n        labels={({ datum }) => `x: ${datum.x} y: ${datum.y}`}\n        labelComponent={\n          <VictoryTooltip style={{ fontSize: 3 }} \n            flyoutStyle={{ stroke: \"#f8b195\", strokeWidth: 1 }} \n            flyoutHeight={10} \n            flyoutWidth={15} \n            pointerLength={5} \n            pointerWidth={3}\n          />\n        }\n        data={coordinates}\n      >\n        <VictoryLine animate={{duration: 500, onLoad: { duration: 500 }}} style={{data: { stroke: \"#ffb6b6\", strokeWidth: 1 }}} />\n        <VictoryScatter style={{\n                          data: {\n                            fill: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y) \n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y) \n                              ? \"#004445\" : \"#aacfcf\",\n                            stroke: ({ datum }) => \n                              (datum.x === coordinates[Object.keys(coordinates).length-1].x && datum.y === coordinates[Object.keys(coordinates).length-1].y)\n                              || (datum.x === coordinates[0].x && datum.y === coordinates[0].y)  \n                              ? \"#004445\" : \"#aacfcf\",\n                            fillOpacity: 0.75,\n                            strokeWidth: 0.5\n                          }\n                        }}\n                        size={({ active }) => active ? 2 : 1 }\n          />\n      </VictoryGroup>\n    </VictoryChart>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotRoute);\n\n\n\n\n","import { COORDINATES_DATA } from './coordinatesData-constant.js';\n\nexport const load_coordinates = (inputc) => {\n\treturn {\n\t\ttype: COORDINATES_DATA,\n\t\tpayload: {\n\t\t\tcoordinates_data: inputc\n\t\t},\n\t}\n}","export const COORDINATES_DATA = 'COORDINATES_DATA';","import { INPUT_DATA } from './inputData-constant.js';\n\nexport const load_input_data = (inputd) => {\n\treturn {\n\t\ttype: INPUT_DATA,\n\t\tpayload: {\n\t\t\tinput_data: inputd\n\t\t},\n\t}\n}","export const INPUT_DATA = 'INPUT_DATA';","import React, { Component } from 'react';\nimport './ReadFileStyles.css';\n\nimport { connect } from 'react-redux';\nimport { load_input_data } from '../../Redux/inputData/inputData-action';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load_input_data: (data) => dispatch(load_input_data(data))\n  }\n}\n\nclass ReadFile extends Component {\n \n  showFile = (event) => {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      var preview = document.getElementById('show-text');\n      var file = document.querySelector('input[type=file]').files[0];\n      var reader = new FileReader();\n      var textFile = /text.*/;\n\n      if (file.type.match(textFile)) {\n        reader.onload = event => {\n          this.props.load_input_data(event.target.result);\n          preview.innerHTML = \"<span>Upload success!</span>\";\n        }\n      } else {\n        preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\n      }\n      reader.readAsText(file);\n      this.setState({input_data: \"ABC\"});\n    } else {\n      alert(\"Your browser is too old to support HTML5 File API\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dl-box\">\n        <div className=\"tc input-file-container\">  \n          <input className=\"input-file\" id=\"my-file\" type=\"file\" onChange={this.showFile} />\n          <label tabindex=\"0\" for=\"my-file\" className=\"input-file-trigger\">Select a file here</label>\n        </div>\n        <p id=\"show-text\" className=\"show-msg\"></p>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ReadFile);\n\n","import React, { Component } from 'react';\nimport './ResetStyles.css';\n\nimport { connect } from 'react-redux';\nimport { load_input_data } from '../../Redux/inputData/inputData-action';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load_input_data: (data) => dispatch(load_input_data(data))\n  }\n}\n\nclass Reset extends Component {\n\tconstructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.load_input_data(\"\");\n  }\n\n  render() {\n   \treturn (\n      <div className='reset-box'>\n        <div className=\"tc reset-container\">\n          <input type=\"button\" id=\"my-reset\" className=\"input-reset\" onClick={this.handleClick}/>\n          <label tabindex=\"0\" for=\"my-reset\" className=\"input-reset-trigger\">Reset Turtle</label>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Reset);\n\n\n\n\n\n","import React from 'react';\nimport './SinglePointStyles.css';\n\nfunction SinglePoint({ id, x, y }) {\n\treturn(\n\t\t<div className='tc grow bg-light-blue br3 pa3 ma2 dib bw2 shadow-3 point-style'>\n\t\t\t<span className='point-font'> ({x}, {y})</span>\n\t\t</div>\n\t);\n}\n\nexport default SinglePoint;\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport SinglePoint from '../singlePoint/SinglePoint';\nimport './DuplicatePointsStyles.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    coordinatesInfo: state.coordinatesData.coordinates_data\n  }\n};\n\nfunction DuplicatePoints({coordinatesInfo}) {\n\tconst [coor, setCoors] = useState([]);\n\tuseEffect(() => {\n    setCoors(coordinatesInfo);\n  }, [coordinatesInfo]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"coor-title\">\n\t\t\t\t<h3> Turtle passed by these coordinates more than once: </h3>\n\t\t\t</div>\n\t\t\t<div className=\"point-style\">\n\t\t\t\t{\n\t\t\t\t\tcoor && coor.map((points, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SinglePoint key={i} x={coor[i].x} y={coor[i].y} />\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t  </div>\n\t);\n} \n\nexport default connect(mapStateToProps, null)(DuplicatePoints);\n\n","import React from 'react';\nimport Header from './components/header/Header';\nimport PlotRoute from './components/PlotRoute';\nimport ReadFile from './components/readFile/ReadFile';\nimport Reset from './components/reset/Reset';\nimport DuplicatePoints from './components/duplicatePoints/DuplicatePoints';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"button-layout\">\n          <ReadFile />\n          <Reset />\n        </div>\n        <div className=\"instruction tc\">\n          <h4>Instructions:</h4>\n          <p>The Turtle's original location is (0,0), facing north.</p>\n          <p>The start point (0,0) and the end point are in darker green. Others points the turtle passed by are in light blue.</p>\n          <p>The coordinates that the turtle passed by more than once will show on the bottom of the page.</p>\n          <p>\"Reset Turtle\" button to reset all of the data.</p>\n        </div>\n        <PlotRoute />\n        <DuplicatePoints />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { INPUT_DATA } from './inputData-constant.js';\n\nconst initialState = {\n\tinput_data: '',\n}\n\nconst inputdata_reducer = (state=initialState, action) => {\n\tswitch(action.type) {\n\t\tcase INPUT_DATA:\n\t\t\treturn Object.assign({}, state, {input_data: action.payload.input_data});\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default inputdata_reducer;","import { COORDINATES_DATA } from './coordinatesData-constant.js';\n\nconst initialState = {\n\tcoordinates_data: [],\n}\n\nconst coordinatesdata_reducer = (state=initialState, action) => {\n\tswitch(action.type) {\n\t\tcase COORDINATES_DATA:\n\t\t\treturn Object.assign({}, state, {coordinates_data: action.payload.coordinates_data});\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default coordinatesdata_reducer;","import { combineReducers } from 'redux';\nimport inputdata_reducer from './inputData/inputData-reducer';\nimport coordinatesdata_reducer from './coordinatesData/coordinatesData-reducer';\n\nexport default combineReducers({\n  inputData: inputdata_reducer,\n  coordinatesData: coordinatesdata_reducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './Redux/root-reducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={store}>\n    \t<App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}